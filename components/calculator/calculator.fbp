% First step : two fields
"create" -> in lr(QTk/lr)
f1(QTk/entry) out -> place#1 lr()
f2(QTk/entry) out -> place#2 lr()
"create(init:[48])" -> in f1()
"create(init:[48])" -> in f2()

% Second step : lr, button and result field
lr() out -> place#1 td(QTk/td)
calcButton(QTk/button) out -> place#2 td()
fResult(QTk/entry) out -> place#3 td()
"create(text:"calc")" -> in calcButton()
"create" -> in fResult()
"create" -> in td()

% Logic
% From button
% Button to get
calcButton() action#button_clicked -> input buttonLogic(calculator/buttonLogic) click -> input get1(ipEdit) out -> in f1()
get1() out -> in f2()
"opt(text:get(output:getAdd))" -> options get1()
% Field to logicAdd
f1() action#getAdd -> input#1 add(calculator/add) output -> input setAdd(ipEdit) out -> in fResult()
f2() action#getAdd -> input#2 add() 
"opt(text:set(_))" -> options setAdd()
% Button color
buttonLogic() color -> in calcButton()

% From TD
td() action#KeyPress -> input buttonLogic()
td() action#KeyRelease -> input buttonLogic()
%td() action#KeyPress => actions_out
%td() action#keyRelease => actions_out
% Specific
f1() action#Enter -> input dispSpecific(display)
"opt(pre:'specific ')" -> options dispSpecific()

% size of field
"set(width:15)" -> in fResult()
"set(width:15)" -> in f1()
"set(width:15)" -> in f2()

% Some options
"set(title:'Calculator')" -> in td()

%OutLinks
td() out => out
in => in aw(QTk/actionsWrapper) out -> in td()
