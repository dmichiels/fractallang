% First step
canvas(ui/canvas) ui_out -> ui_in win(ui/window)
canvas() actions_out -> actions_in win()
win() actions_out -> input disp(display)
"set(glue:nswe bg:white)" -> ui_in canvas()
"set(title:"Fractallang Editor")" -> actions_in win()
% Image

% Double-click to add component
canvas() action#ButtonPress -> input dclick(mouse/doubleclick)

% Generate the Component
dclick() output -> input ie1(ipEdit) out -> type compgen(graph/generator)
"opt(text:'dummyname'#"editor/component")" -> options ie1()

% Bind it
% get the entry point of canvas
dclick() output -> input ie2(ipEdit) out -> actions_in canvas()
"opt(text:getEntryPoint(output:entryPointBind))" -> options ie2()
% get the entry points to the bind component
compgen() output -> outComp bind(graph/bind)
canvas() action#entryPointBind -> inComp bind()
%Send the two ports to bind
dclick() output -> input ie3(ipEdit) out -> ports bind()
"opt(text:[ui_out#actions_in actions_out#actions_in])" -> options ie3()

% Send the initial message to the new component
bind() outComp -> comp send(graph/send)
dclick() output -> message send()
dclick() output -> input ie4(ipEdit) out -> port send()
"opt(text:ui_in)" -> options ie4()

% Start the comp
bind() outComp -> input start(graph/start)

%output -> input d(display) output -> ui_in comp(editor/component) ui_out -> widget canvas()

% Options
"opt(pre:'default ')" -> options disp()


