a => input split1(splitter) out#1 -> a and1(and) out -> input#1 concat(concat) out => out
split1() out#2 -> a and2(and) out -> input#2 concat()
split1() out#3 -> a and3(and) out -> input#3 concat()
split1() out#4 -> a and4(and) out -> input#4 concat()
split1() out#5 -> a and5(and) out -> input#5 concat()
split1() out#6 -> a and6(and) out -> input#6 concat()
split1() out#7 -> a and7(and) out -> input#7 concat()
split1() out#8 -> a and8(and) out -> input#8 concat()
split1() out#9 -> a and9(and) out -> input#9 concat()
split1() out#10 -> a and10(and) out -> input#10 concat()
split1() out#11 -> a and11(and) out -> input#11 concat()
split1() out#12 -> a and12(and) out -> input#12 concat()
split1() out#13 -> a and13(and) out -> input#13 concat()
split1() out#14 -> a and14(and) out -> input#14 concat()
split1() out#15 -> a and15(and) out -> input#15 concat()
split1() out#16 -> a and16(and) out -> input#16 concat()
b => input split2(splitter) out#1 -> b and1()
split2() out#2 -> b and2()
split2() out#3 -> b and3()
split2() out#4 -> b and4()
split2() out#5 -> b and5()
split2() out#6 -> b and6()
split2() out#7 -> b and7()
split2() out#8 -> b and8()
split2() out#9 -> b and9()
split2() out#10 -> b and10()
split2() out#11 -> b and11()
split2() out#12 -> b and12()
split2() out#13 -> b and13()
split2() out#14 -> b and14()
split2() out#15 -> b and15()
split2() out#16 -> b and16()