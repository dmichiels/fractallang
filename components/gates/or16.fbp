a => input split1(splitter) out#1 -> a or1(gates/or) out -> input#1 concat(concat) out => out
split1() out#2 -> a or2(gates/or) out -> input#2 concat()
split1() out#3 -> a or3(gates/or) out -> input#3 concat()
split1() out#4 -> a or4(gates/or) out -> input#4 concat()
split1() out#5 -> a or5(gates/or) out -> input#5 concat()
split1() out#6 -> a or6(gates/or) out -> input#6 concat()
split1() out#7 -> a or7(gates/or) out -> input#7 concat()
split1() out#8 -> a or8(gates/or) out -> input#8 concat()
split1() out#9 -> a or9(gates/or) out -> input#9 concat()
split1() out#10 -> a or10(gates/or) out -> input#10 concat()
split1() out#11 -> a or11(gates/or) out -> input#11 concat()
split1() out#12 -> a or12(gates/or) out -> input#12 concat()
split1() out#13 -> a or13(gates/or) out -> input#13 concat()
split1() out#14 -> a or14(gates/or) out -> input#14 concat()
split1() out#15 -> a or15(gates/or) out -> input#15 concat()
split1() out#16 -> a or16(gates/or) out -> input#16 concat()
b => input split2(splitter) out#1 -> b or1()
split2() out#2 -> b or2()
split2() out#3 -> b or3()
split2() out#4 -> b or4()
split2() out#5 -> b or5()
split2() out#6 -> b or6()
split2() out#7 -> b or7()
split2() out#8 -> b or8()
split2() out#9 -> b or9()
split2() out#10 -> b or10()
split2() out#11 -> b or11()
split2() out#12 -> b or12()
split2() out#13 -> b or13()
split2() out#14 -> b or14()
split2() out#15 -> b or15()
split2() out#16 -> b or16()