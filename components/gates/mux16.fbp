a => input split1(splitter) out#1 -> a mux1(gates/mux) out -> input#1 concat(concat) out => out
split1() out#2 -> a mux2(gates/mux) out -> input#2 concat()
split1() out#3 -> a mux3(gates/mux) out -> input#3 concat()
split1() out#4 -> a mux4(gates/mux) out -> input#4 concat()
split1() out#5 -> a mux5(gates/mux) out -> input#5 concat()
split1() out#6 -> a mux6(gates/mux) out -> input#6 concat()
split1() out#7 -> a mux7(gates/mux) out -> input#7 concat()
split1() out#8 -> a mux8(gates/mux) out -> input#8 concat()
split1() out#9 -> a mux9(gates/mux) out -> input#9 concat()
split1() out#10 -> a mux10(gates/mux) out -> input#10 concat()
split1() out#11 -> a mux11(gates/mux) out -> input#11 concat()
split1() out#12 -> a mux12(gates/mux) out -> input#12 concat()
split1() out#13 -> a mux13(gates/mux) out -> input#13 concat()
split1() out#14 -> a mux14(gates/mux) out -> input#14 concat()
split1() out#15 -> a mux15(gates/mux) out -> input#15 concat()
split1() out#16 -> a mux16(gates/mux) out -> input#16 concat()
b => input split2(splitter) out#1 -> b mux1()
split2() out#2 -> b mux2()
split2() out#3 -> b mux3()
split2() out#4 -> b mux4()
split2() out#5 -> b mux5()
split2() out#6 -> b mux6()
split2() out#7 -> b mux7()
split2() out#8 -> b mux8()
split2() out#9 -> b mux9()
split2() out#10 -> b mux10()
split2() out#11 -> b mux11()
split2() out#12 -> b mux12()
split2() out#13 -> b mux13()
split2() out#14 -> b mux14()
split2() out#15 -> b mux15()
split2() out#16 -> b mux16()
sel => sel mux1()
sel => sel mux2()
sel => sel mux3()
sel => sel mux4()
sel => sel mux5()
sel => sel mux6()
sel => sel mux7()
sel => sel mux8()
sel => sel mux9()
sel => sel mux10()
sel => sel mux11()
sel => sel mux12()
sel => sel mux13()
sel => sel mux14()
sel => sel mux15()
sel => sel mux16()